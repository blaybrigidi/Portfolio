<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Admin - Add Project</title>
  <link rel="stylesheet" href="/css/style.css">
  <style>
    .admin-form {
      max-width: 800px;
      margin: 80px auto;
      padding: 20px;
      background-color: #fff;
      border-radius: 10px;
      box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
    }
    .admin-form h1 {
      text-align: center;
      margin-bottom: 30px;
    }
    .form-row {
      display: flex;
      gap: 20px;
      margin-bottom: 20px;
    }
    .form-row .form-group {
      flex: 1;
    }
    .preview-container {
      margin-top: 20px;
      text-align: center;
    }
    #imagePreview {
      max-width: 300px;
      max-height: 200px;
      display: none;
      margin: 10px auto;
      border-radius: 5px;
    }
    .success-message {
      padding: 10px;
      background-color: #d4edda;
      color: #155724;
      border-radius: 5px;
      margin-bottom: 20px;
      display: none;
    }
  </style>
</head>
<body>
  <div class="admin-form">
    <h1>Add New Project</h1>
    
    <div id="successMessage" class="success-message"></div>
    
    <form id="projectForm">
      <div class="form-group">
        <label for="title">Project Title *</label>
        <input type="text" id="title" name="title" required>
      </div>
      
      <div class="form-group">
        <label for="description">Description *</label>
        <textarea id="description" name="description" rows="5" required></textarea>
      </div>
      
      <div class="form-row">
        <div class="form-group">
          <label for="projectUrl">Project URL</label>
          <input type="url" id="projectUrl" name="projectUrl" placeholder="https://example.com">
        </div>
        
        <div class="form-group">
          <label for="githubUrl">GitHub URL</label>
          <input type="url" id="githubUrl" name="githubUrl" placeholder="https://github.com/username/repo">
        </div>
      </div>
      
      <div class="form-group">
        <label for="imageUrl">Image URL *</label>
        <input type="url" id="imageUrl" name="imageUrl" placeholder="https://example.com/image.jpg" required>
        <div class="preview-container">
          <button type="button" id="previewButton" class="btn" style="margin-top: 10px;">Preview Image</button>
          <img id="imagePreview" src="#" alt="Image Preview">
        </div>
      </div>
      
      <div class="form-group">
        <label for="technologies">Technologies * (comma-separated)</label>
        <input type="text" id="technologies" name="technologies" placeholder="HTML, CSS, JavaScript" required>
      </div>
      
      <div class="form-group">
        <label for="featured">
          <input type="checkbox" id="featured" name="featured">
          Featured Project
        </label>
      </div>
      
      <button type="submit" class="btn">Add Project</button>
    </form>
  </div>
  
  <script>
    // Image preview functionality
    document.getElementById('previewButton').addEventListener('click', function() {
      const imageUrl = document.getElementById('imageUrl').value;
      const preview = document.getElementById('imagePreview');
      
      if (imageUrl) {
        preview.src = imageUrl;
        preview.style.display = 'block';
        
        // Handle image load error
        preview.onerror = function() {
          preview.style.display = 'none';
          alert('Error loading image. Please check the URL.');
        };
      } else {
        alert('Please enter an image URL first');
      }
    });
    
    // Form submission
    document.getElementById('projectForm').addEventListener('submit', async function(e) {
      e.preventDefault();
      
      const formData = new FormData(this);
      const projectData = {};
      
      // Convert FormData to JSON
      for (const [key, value] of formData.entries()) {
        if (key === 'featured') {
          projectData[key] = true;
        } else {
          projectData[key] = value;
        }
      }
      
      try {
        const response = await fetch('/api/projects/createProject', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify(projectData)
        });
        
        const result = await response.json();
        
        if (result.status === 201) {
          // Show success message
          const successMessage = document.getElementById('successMessage');
          successMessage.textContent = result.msg;
          successMessage.style.display = 'block';
          
          // Clear form
          this.reset();
          document.getElementById('imagePreview').style.display = 'none';
          
          // Scroll to top
          window.scrollTo(0, 0);
        } else {
          alert('Error: ' + result.msg);
        }
      } catch (error) {
        alert('An error occurred: ' + error.message);
      }
    });
  </script>
</body>
</html> 